const Delivery = {
    init() {
        this.login = window.user.login
        this.pass = window.user.password
    },
    render(bay=Bay) {
        this.data = bay.data
        window.modal.setContent(`
            <div class="form" id="sale">
                <div class="title">üóíÔ∏è–î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è</div>
                <div><span>–ò–º—è:</span><input type="text" name="firstName"></div>
                <div><span>–§–∞–º–∏–ª–∏—è:</span><input type="text" name="lastName"></div>
                <div><span>Email:</span><input type="email" name="email"></div>
                <div><span>–¢–µ–ª–µ—Ñ–æ–Ω:</span><input type="tel" name="phone"></div>
                <div><span>–ì–æ—Ä–æ–¥:</span><input type="text" name="city"></div>
                <div><span>–ê–¥—Ä–µ—Å:</span><input type="text" name="adres"></div>
            </div>
            
            
            <div class="form" id="deliver">
                <div class="title">üöö–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</div>
                <div><span>–°–∞–º–æ–≤—ã–≤–æ–∑</span><input type="radio" name="samovuvoz"></div>
                <div><span>–ù–æ–≤–æ–π –ø–æ—á—Ç–æ–π</span><input type="radio" name="newPoshta"></div>
                <div><span>–ö—É—Ä—å–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±–æ–π</span><input type="radio" name="all"></div>
            </div>
            
            
            <div class="form" id="pay">
                <div class="title">üí∞–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</div>
                <div><img class="liqpay" src="src/img/icon/liqpay.svg"></img><input type="radio" name="liqpay"></div>
                <div><span>–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ</span><input type="radio" name="all"></div>
            </div>

            ${bay.render("return")}
        `);

        window.modal.setFooterContent("")
        window.modal.addFooterBtn('–û–ø–ª–∞—Ç–∏—Ç—å', 'tingle-btn tingle-btn--primary', ()=> {
            this.#getForm()
            this.#toPay()
        });
        window.modal.addFooterBtn('–û—Ç–º–µ–Ω–∞', 'tingle-btn tingle-btn--danger', ()=> {
            window.modal.close();
        });

        window.modal.open()
    },
    #getForm() {
        this.data
        $(".form#sale")
        $(".form#deliver")
        $(".form#pay")
    },
    async #toPay() {
        let res = await send("toPay", {
            login: this.login,
            password: this.pass,
            data: this.data
        }, 'POST');

        window.modal.setContent(res)
        window.modal.setFooterContent("")
        window.modal.open()
    }
}



class Bay extends Object {
    constructor() {
        super()
        Delivery.init()
        this.root = document.createElement("div")
        this.root.className = "bay"
        this.root.textContent = `üõí:0 üí∞:0‚Ç¥`
        this.count = 0
        this.data = {}
        this.root.addEventListener("click", ()=> {
            this.render()
        });
        this.window = new tingle.modal({
            footer: true,
            stickyFooter: false,
            closeMethods: ['overlay', 'button', 'escape'],
            closeLabel: "–ó–∞–∫—Ä—ã—Ç—å",
            cssClass: ['bay'],
            onOpen: function() {
                console.log('modal open');
            },
            onClose: function() {
                console.log('modal closed');
            },
            beforeClose: function() {
                return true;
                return false;
            }
        });

        document.querySelector(".two-nav").appendChild(this.root)
    }
    add(data={name, articul, src, price, color, category, id}) {
        this.count++

        if(this.data[data.name]) this.data[data.name].push(data)
        else {
            this.data[data.name] = []
            this.data[data.name].push(data)
        }
    }
    calculate() {
        this.total = 0
        this.data.forEach((tovar)=> {
            tovar.forEach((data)=> {
                this.total += data.price
            });
        });
        this.root.textContent = `üõí:${this.count} üí∞:${this.total}‚Ç¥`

        return this.total
    }
    render(snt) {
        let content = ""
        this.calculate()
        const view =()=> {
            this.modal.setContent(content)
            this.modal.addFooterBtn('–û—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É', 'tingle-btn tingle-btn--primary', ()=> {
                let delivery = new Delivery()
                delivery.render(this)
                this.modal.close()
            });
            this.modal.addFooterBtn('–û—Ç–º–µ–Ω–∞', 'tingle-btn tingle-btn--danger', ()=> {
                this.modal.close();
            });
            this.modal.open()
        }

        this.data.forEach((tovar, key)=> {
            tovar.forEach((data)=> {
                if(data){
                    content += `
                        <div id="d_${key}_${data.name}">
                            <p>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${data.name}</p>
                            <p>–ê—Ä—Ç–∏–∫—É–ª: ${data.articul}</p>
                            <strong>–¶–µ–Ω–∞: ${data.price}‚Ç¥</strong>
                            ${data.color}
                            <div class="button" id="${key}_${data.name}">x</div>
                        </div>
                    `;

                    $(`.button#${key}_${data.name}`).on("click", ()=> {
                        document.querySelector(`#d_${key}_${data.name}`).remove()
                        delete this.data[key]
                        this.render()
                    });
                }
            });
        });

        if(!snt) view()
        else return content
    }
}